{
  "name": "data_structures",
  "version": "1.0.0",
  "license": "UNLICENSED",
  "engines": {
    "node": ">=23.0.0"
  },
  "scripts": {
    "lint:fix": ""
  },
  "type": "module",
  "imports": {
    "#src/*": "./src/*.ts",
    "#src": "./src/index.ts",
    "#bin/*": "./bin/*.ts",
    "#bin": "./bin/index.ts",
    "#tests/*": "./tests/*.ts",
    "#tests": "./tests/index.ts"
  },
  "dependencies": {
    "@athenna/common": "^5.10.0",
    "reflect-metadata": "^0.2.2"
  },
  "devDependencies": {
    "@athenna/test": "^5.3.0",
    "@athenna/tsconfig": "^5.0.0",
    "@typescript-eslint/eslint-plugin": "^8.21.0",
    "@typescript-eslint/parser": "^8.21.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^8.10.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.6.0",
    "prettier": "^2.8.8"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid",
    "endOfLine": "lf",
    "semi": false,
    "printWidth": 80,
    "overrides": [
      {
        "files": "tests/**/*",
        "options": {
          "printWidth": 120
        }
      }
    ]
  },
  "eslintIgnore": [],
  "eslintConfig": {
    "env": {
      "es2021": true,
      "node": true
    },
    "globals": {
      "ioc": true,
      "Env": true,
      "Config": true
    },
    "plugins": [
      "prettier",
      "@typescript-eslint"
    ],
    "extends": [
      "standard",
      "eslint:recommended",
      "plugin:prettier/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/eslint-recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "rules": {
      "camelcase": "off",
      "dot-notation": "off",
      "prettier/prettier": "error",
      "no-use-before-define": "off",
      "no-useless-constructor": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }
      ]
    }
  }
}
